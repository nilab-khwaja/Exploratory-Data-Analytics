# -*- coding: utf-8 -*-
"""Exploratory Data Analytics.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Xj1sahLaAZKpD1tQssN9TgYfhW4JtpeP

# ***Exploratory Data Analytics (EDA)***

**`Step 1 : Import libraries`**
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from collections import Counter

companies = pd.read_csv('/content/Nilab Khwajazada - Unicorn_Companies.csv')

"""**`Step 2: Data Exploration`**"""

companies.head(10)

companies.shape

companies.drop_duplicates().shape

companies.info()

companies.dtypes

missing_values = companies.isnull().sum()
missing_values

"""# **Handling with Missing values**"""

companies['City'] = companies['City'].fillna('Unknown')
companies['Select Investors'] = companies['Select Investors'].fillna('Unknown')

companies.isnull().sum()

"""# ***Step 4: Data Cleaning***"""

def cleaning_data(value):
  if isinstance(value, str):
    if 'B' in value:
      return float(value.replace ('B', '').replace('$', ''))
    elif 'M'in value:
      return float(value.replace('M', '').replace('$', '')) / 1000
    return 0

companies['Valuation'] = companies['Valuation'].apply(cleaning_data)
companies['Funding'] = companies['Funding'].apply(cleaning_data)

companies.head(5)

companies['Date Joined'] = pd.to_datetime(companies['Date Joined'])

companies.info()

companies['Year Founded'].describe()

def remove_outliers(df, column):
    Q1 = df[column].quantile(0.25)
    Q3 = df[column].quantile(0.75)
    IQR = Q3 - Q1
    lower_bound = Q1 - 1.5 * IQR
    upper_bound = Q3 + 1.5 * IQR
    return df[(df[column] >= lower_bound) & (df[column] <= upper_bound)]

companies = remove_outliers(companies, 'Valuation')
companies = remove_outliers(companies, 'Funding')
companies = remove_outliers(companies, 'Year Founded')

companies['Industry'] = companies['Industry'].replace({'Artificial intelligence': 'AI'})

companies

"""# ***Statistics***"""

companies.describe()

"""# **Visualised Exploration**

**Valuation and funding analysis**
"""

sns.histplot(companies['Valuation'], color='blue', label='Valuation')
plt.legend()
plt.grid(axis='y', linestyle='--', alpha=0.5)

sns.histplot(companies['Funding'], kde= True, color= 'Green', label= 'Funding', bins = 30)
plt.legend()
plt.grid(axis = 'y', linestyle = '--', alpha= 0.7)

"""**`Industry Analytics`**"""

industry_counts = companies['Industry'].value_counts()
plt.figure(figsize=(12,8))
ax = sns.barplot(y=industry_counts.index, x=industry_counts.values, palette='tab10')
ax.set_title('Number of Unicorn by Industry')
plt.xlabel('Number of companies')
plt.ylabel('Industries')
plt.grid(axis = 'x', linestyle = '--', alpha = 0.5)
plt.show()

industry_counts = companies['Industry'].value_counts()

plt.figure(figsize=(12, 8))
br = sns.barplot(y=industry_counts.index, x=industry_counts.values, palette='tab10')

for index, value in enumerate(industry_counts.values):
    plt.text(value, index, str(value), va='center', ha = 'right', color = 'white', fontweight='bold')

br.set_title('Number of Unicorns by Industries', fontsize=16)
plt.xlabel('Number of Companies', fontsize=12)
plt.ylabel('Industry', fontsize=12)
plt.grid(axis='x', linestyle='--', alpha=0.7)
plt.show()

"""# **Geographics Analysis**"""

continent_count = companies['Continent'].value_counts()
plt.figure(figsize=(12, 8))
az = sns.barplot(y=continent_count.index, x=continent_count.values, palette='tab10')

# Annotating the bars
for index, value in enumerate(continent_count.values):
    plt.text(value, index, str(value),
             va='center',
             ha='right',
             color='white',
             fontweight='bold')

az.set_title('Number of Unicorns by continents')
plt.grid(axis='x', linestyle = '-', alpha = 0.8)
plt.xlabel('Continents')
plt.ylabel('number of Unicorns')
plt.show()

country_count = companies['Country/Region'].value_counts().head(10)
az = sns.barplot(y= country_count.index, x = country_count.values)
az.set_title('Top 10 Unicorns by country')
for index, value in enumerate(country_count.values):
  plt.text( value, index, str(value), va='center', ha='right', fontweight = 'bold' ,color = 'white')

country_count = companies['Country/Region'].value_counts().head(10)
plt.figure(figsize = (19,8))
br = sns.barplot(y= country_count.index, x = country_count.values, palette='tab10')
br.set_title('Top 10 Unicorns by country')
for index, value in enumerate(country_count.values):
  plt.text( value, index, str(value), va='center', ha='right', fontweight = 'bold' ,color = 'white')
plt.grid(axis = 'x', linestyle = '-',alpha = 0.8)

"""# **Termporal Analysis**"""

sns.histplot(companies['Year Founded'], bins = 30, kde = True, color = 'blue')
plt.xlabel('Year Founded')
plt.ylabel('Number of Companies')
plt.show()

sns.histplot(companies['Date Joined'],bins = 30, kde = True, color = 'orange')
plt.xlabel('Date Joined')
plt.ylabel('Number of Companies')
plt.show()

"""# ***Investor Analysis***"""

investors = companies['Select Investors'].dropna().str.split(', ').sum()
investor_count = Counter(investors).most_common(10)
investor_count

investors_name, investors_frequeincies = zip(*investor_count)

plt.figure(figsize = (12,6))
ty = sns.barplot(y = list(investors_name), x = list(investors_frequeincies), palette='tab10')

for index, value in enumerate(investors_frequeincies):
  plt.text(value - 0.1, index, str(value), va='center', fontweight='bold', fontsize=10, color='white', ha = 'right')

ty.set_title('Top 10 Investors')
plt.xlabel('Count of Investors')
plt.ylabel('Investors')

bx=sns.boxplot(data = companies, x = 'Funding', y = 'Industry', palette = 'Set3')
bx.set_title('Funding Distribution by Industry')
plt.xlabel('Funding ($B)')
plt.ylabel('Industry')
plt.show()

plt.figure(figsize=(14, 6))
az = sns.boxplot(data=companies, x='Funding', y='Industry', palette='Set3')
az.set_title('Funding Distribution by Industry')
plt.xlabel('Funding ($B)')
plt.ylabel('Industry')
plt.grid(axis='x', linestyle='--', alpha=0.7)
plt.show()

year_founded_count = companies['Year Founded'].value_counts().sort_index()
plt.plot(year_founded_count.index, year_founded_count.values, marker = 'o', color = 'blue')
plt.xlabel('Year')
plt.ylabel('Number of Companies')
plt.show()

companies['Year Joined'] = companies['Date Joined'].dt.year

numerical_data = companies[['Valuation', 'Funding', 'Year Founded', 'Year Joined']].dropna()
correlation_matrix = numerical_data.corr()

plt.figure(figsize=(8, 6))
sns.heatmap(correlation_matrix, annot=True, cmap='coolwarm', fmt=".2f", cbar_kws={'label': 'Correlation Coefficient'})
plt.xticks(rotation=45)
plt.yticks(rotation=0)
plt.show()

plt.figure(figsize=(14, 6))

plt.subplot(1, 2, 1)
year_founded_count = companies['Year Founded'].value_counts().sort_index()
plt.plot(year_founded_count.index, year_founded_count.values, marker='o', label='Companies Founded')
plt.xlabel('Year')
plt.ylabel('Number of Companies')
plt.grid(True, linestyle='--', alpha=0.7)
plt.legend()


plt.subplot(1, 2, 2)
year_joined_count = companies['Date Joined'].dt.year.value_counts().sort_index()
plt.plot(year_joined_count.index, year_joined_count.values, marker='o', color='orange', label='Companies Joining Unicorn Club')
plt.xlabel('Year')
plt.ylabel('Number of Companies')
plt.grid(True, linestyle='--', alpha=0.7)
plt.legend()

plt.tight_layout()
plt.show()

top_10_valuation = companies.nlargest(10, 'Valuation')[['Company', 'Valuation']]
zt= sns.barplot(data = top_10_valuation, x = 'Valuation', y = 'Company', palette = 'Spectral')
zt.set_title('Top 10 companies by Valuation')
plt.xlabel('Valuation ($B)')
plt.ylabel('Company')
plt.show()

top_10_valuation = companies.nlargest(10, 'Valuation')[['Company', 'Valuation']]

plt.figure(figsize=(12, 6))
tt=sns.barplot(data=top_10_valuation, x='Valuation', y='Company', palette='Spectral')
tt.set_title('Top 10 Companies by Valuation')
plt.xlabel('Valuation ($B)')
plt.ylabel('Company')
plt.grid(axis='x', linestyle='--', alpha=0.7)
plt.show()

industry_continent_matrix = companies.groupby(['Industry', 'Continent']).size().unstack(fill_value=0)

plt.figure(figsize=(12, 8))
ae=sns.heatmap(industry_continent_matrix, cmap='Blues', annot=True, fmt="d", cbar=False, linewidths=0.5, linecolor='gray')
ae.set_title('Industry vs Continent: Number of Unicorns')
plt.xlabel('Continent')
plt.ylabel('Industry')
plt.show()

companies['Years to Join'] = companies['Date Joined'].dt.year - companies['Year Founded']

sns.histplot(companies['Years to Join'], color = 'teal')

plt.xlabel('Years to Join')
plt.ylabel('Number of Companies')
plt.show()

"""# **Bivariate Analysis**"""

plt.figure(figsize=(10, 6))
sns.scatterplot(data=companies, x='Funding', y='Valuation', hue = 'Continent',  palette='tab10', alpha=0.8)
ab=sns.regplot(data=companies, x='Funding', y='Valuation', scatter=False, color='red', line_kws={"label": "Trendline"})
ab.set_title('Valuation vs. Funding')
plt.xlabel('Funding ($B)')
plt.ylabel('Valuation ($B)')
plt.legend(title='Continent')
plt.grid(alpha=0.5)
plt.show()

#hue='Continent',

plt.figure(figsize=(10, 6))
sns.scatterplot(data=companies, x='Years to Join', y='Valuation', hue='Continent', palette='tab10', alpha=0.8)
sns.regplot(data=companies, x='Years to Join', y='Valuation', scatter=False, color='blue', line_kws={"label": "Trendline"})
plt.xlabel('Time to Unicorn (Years)')
plt.ylabel('Valuation ($B)')
plt.legend(title='Continent')
plt.grid(alpha=0.5)
plt.show()

"""Valuation by Continent"""

plt.figure(figsize=(10, 6))
sns.boxplot(data=companies, x='Continent', y='Valuation', palette='Set2')
plt.xlabel('Continent')
plt.ylabel('Valuation ($B)')
plt.grid(axis='y', linestyle='--', alpha=0.7)
plt.show()

"""# **Multivariate Analysis**"""

plt.figure(figsize=(10, 6))
sns.scatterplot(
    data=companies,
    x='Funding',
    y='Valuation',
    hue='Continent',
    size='Years to Join',
    palette='tab10',
    alpha=0.8,
    sizes=(20, 200)
)
plt.title('Valuation vs. Funding by Continent (Bubble Size: Time to Unicorn)')
plt.xlabel('Funding ($B)')
plt.ylabel('Valuation ($B)')
plt.legend( bbox_to_anchor=(1.05, 1), loc='upper left')
plt.grid(alpha=0.5)
plt.show()

"""# **FacetGrid: Valuation and Funding across Continents and Industries**"""

g = sns.FacetGrid(companies, col='Continent', hue='Industry', col_wrap=3, height=4, palette='tab10')
g.map(sns.scatterplot, 'Funding', 'Valuation', alpha=0.7)
g.add_legend()
g.set_titles('{col_name}')
g.set_axis_labels('Funding ($B)', 'Valuation ($B)')
plt.subplots_adjust(top=0.9)
g.fig.suptitle('Valuation vs. Funding Across Continents and Industries')
plt.show()

"""# *Expanded Correlation Matrix*"""

expanded_corr = companies[['Valuation', 'Funding', 'Year Founded', 'Year Joined']].corr()

plt.figure(figsize=(8, 6))
sns.heatmap(expanded_corr, annot=True, cmap='coolwarm', fmt=".2f", cbar_kws={'label': 'Correlation Coefficient'})
plt.title('Expanded Correlation Matrix')
plt.show()